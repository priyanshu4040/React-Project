import { createSlice, nanoid } from "@reduxjs/toolkit";

//In Redux features are known as slices

const initialState = {
  todos : [{id: 1, text:"Hello World"}]
}

// function sayHello() {
//   console.log("Hello World")
// }

export const todoSlice = createSlice({
  name : 'todo',
  initialState,
  reducers:{
    //sayHello is reference and sayHello() is call a function
    // addTodo: sayHello,

    //here you will get access to state and action
    //state : provides access to what currently present in the state
    //when addTodo is call, at that time we just pass state and not action,because action creators is generated by Reducers in RTK.
    addTodo : (state,action) => {
      const todo = {
        id: nanoid(),
        text: action.payload
      }

      state.todos.push(todo)
    },
    removeTodo : (state,action) => {
      // state.todos = state.todos.filter((todo) => { return todo.id !== action.payload})
      state.todos = state.todos.filter((todo) => todo.id !== action.payload)

    },
  }
})

// ✅ todoSlice.actions — action creators (addTodo(), removeTodo())
//it is used in components
export const {addTodo,removeTodo} = todoSlice.actions
// ✅ todoSlice.reducer — the reducer function that updates the state
//It is used in store.js
export default todoSlice.reducer